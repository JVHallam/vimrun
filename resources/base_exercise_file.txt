

           V I M R U N                               


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


           ( :line_number )


==> :20

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


           (  w, x  ) 


==> Its jjust a fflesh wwound.

==> This bbuilding has tto be aat lleast three ttimes bbigger tthan tthis!

==> I am sserious. AAnd dont ccall mme SShirley.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


          (  e, x  )


==> Imm about too doo too youu what Limpp Bizkit didd too musicc inn 
    the latee 90s.

==> Greaterr good? II amm your wifee! Imm the greatestt goodd youree ever 
    gonnaa gett!

==> The coww jumpedd overr the moonn.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

          
          (  i  )


==> There is text misng this .
==> There is some text missing from this line.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



           
          ( CTRL + F )



          ( CTRL + U )





~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


          (  A  )


--> There is also some text missing here.
==> There is also some text miss

--> There is some text missing from this line.
==> There is some text missing from th

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


          (  d,w  )


==> There XXX some useless XXX blocks in this XXX line.

==> There are a some words fun that don't belong paper in this line.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


          (  d,$  )


==> Somebody typed the end of this line twice. end of this line twice.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~      


          (  number, d, w  )

==>  this 2DW XXX line 4DW XXX XXX XXX of words is 3DW XXX XXX cleaned up.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


          (  d,d  )


==>  1)  Roses are red,
==>  2)  Mud is fun,
==>  3)  Violets are blue,
==>  4)  I have a car,
==>  5)  Clocks tell time,
==>  6)  Sugar is sweet
==>  7)  And so are you.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


          (  u  )


==> Fiix the problemms oon thhis line and reeplace them witth undo.


          ( CTRL + R )


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


          ( dd, p  )


==> d) Can you learn too?
==> b) Violets are blue,
==> c) Intelligence is learned,
==> a) Roses are red,

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


          (  r, <any key>  )


==> Whan this lime was tuoed in, someone presswd some wrojg keys!
==> When this line was typed in, someone pressed some wrong keys!

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


          (  c, e  )


==> This lubw has a few wptfd that mrrf changing usf the change operator.
==> This line has a few words that need changing using the change operator.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


          (  C  )


--> The end of this line needs some help to make it like the second.
==> The end of this line needs to be corrected using the  C  command.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


          ( CTRL + o  -> Return to last spot )

          ( gg        -> Top                 )

          ( G         -> Bottom              )


==> Jump to the top, to the bottom, then back to this line.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


          (  /term  )
(  set :hls       -> high light search  )

(  /error         -> error              )

(  /\cerror       -> ErRoR  && error    )

(  n              -> Forwards           )

(  N              -> Backwards          )

(  :nohls         -> Clear highlights   )

==> When the guys were writing this tutorial, they used the word "error" 
    to empahsise the use of the search tool. I believe that just using
    "error" and not throwing in "eRrOrr" and "Error" was an error.
    You're not forced to try and use the ignore case setting at this point.
    Also, it's an error for you not to use hlsearch, it makes life easier
    when searching through a crappy block of text, to find instances of
    errors.
    Errors are natural part of programming. The best programmer isn't the 
    one who can just avoid making errors, but one who can also fix them 
    when they arise.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


          (  :s/old/new/g  )


--> /thee

--> :s/thee/the/g

==> thee best time to see thee flowers is in thee spring.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


          (  :s/\cold/new/  )

--> /\cthee

--> :%s/\cthee/the/g

==> thEE best time to see thee flowers is in ThEe spring.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


            (  o || O  )


--> Top    ( o )
--> Below
--> Middle
--> Above
--> Bottom ( O ) 

==> Top    ( o )
==> Middle
==> Bottom ( O )

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


            (  a  )


--> This line will allow you to practice appending text to a line.
==> This li will allow you to pract appendi text to a line.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


            (  R  )

  
--> Adding 123 to 456 gives you 579.
==> Adding XXX to xxx gives you xxx.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


            (  Y, p  )

--> First
--> Second
--> Third

==> First

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


            (  q macros  )


--> q, a, 0, ce, *, <ESC>, q
--> Move to the next line
--> @, a




Record here:

==> This

To

* This

Then:

==> This
==> Is
==> A
==> Star
==> Bullet
==> List




Record Here:

==>  stdio.h

To 

==>  #include <stdio.h>

Then:

==>  string.h
==>  stdlib.h
==>  stdint.h
==>  unistd.h

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


            (  J  )
            
  
==> This
    is
    an
    example
    for the
    capital J command.

==> Join this
      
    line
    together
    too.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


            (  f,<key>  )


==> ( f, . ) will jump you from the start of this line to the end.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


            (  d, f, <key>  )


--> This is a line with a huge block in it.
==> This is a line with |XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX|a huge block in it.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


           (  d, a, p  )


==> REMOVE LOREM


  This is a useful
  paragraph that
  has alot of content.

  Lorem ipsum dolor sit amet, 
  consectetur adipiscing elit. 
  Maecenas id varius eros, eget lacinia augue. 

  This is some more content, 
  don't delete this.


==> ORDER TEXT


  This is the third paragraph.
  This goes at the bottom.

  This is the first 
  paragraph.
  This one goes at the top.

  This is the second paragraph.
  This goes in the middle.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


           (  d, a, s  )


--> This is sentence one. This is sentence two.
==> This is sentence one. XXX XXX XXX XXX. This is sentence two.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


           (  c, i, s  )


--> This is sentence one. This is sentence two. This is sentence three. 
==> This is sentence one. XXX XXX XXX XXX XXXX. This is sentence three. 

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


           (  v, a, s  )


--> This is a good sentence. This is a good sentence. This is a good sentence.
==> This is a good sentence. 

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

           
           (  c, i, (  )


--> function_call( good_var );
==> function_call( bad_var, terrible_var, error_var );

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

           
           (  d, i, (  )

--> function_call(); 
==> function_call( uneeded_var, super_unneeded_var ); 

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

           
           (  v, i, (  )


--> function_one( var_one, var_two, var_three );
==> function_two();

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


           (  c, i, "  )


--> I forgot how to "quote" something
==> I forgot how to "kwote" something

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

           
           (  d, a, "  )


--> I decided to put a useless string in this sentence.
==> I decided to put a "SUPER USEFUL" useless string in this sentence.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

           
           (  v, i, "  )


--> Excuse me, do you know where i can find some "Sailors"? 
==> Excuse me, do you know where i can find some ""? 

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

           
           (  c, i, t  )


--> <li> This is correct </li>
==> <li> This is a super wrong block </li>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

           
           (  d, a, t  )


--> <li> 1 </li><li> 2 </li><li> 3 </li>
==> <li> 1 </li><li> WRONG </li><li> 2 </li><li> 3 </li>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

           
           (  v, a, t  )


--> <li> Boom </li><li> Boom </li><li> Boom </li>
==> <li> Bam </li>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


           (  c, i, <  )


--> <div> Right use of tags </div>
==> <img> Wrong use of tags <p>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


           (  v, i, <  )


--> <div> full </div>
==> <> empty <>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


           (  d, a, <  )


--> <div> RIGHT </div>
==> <div><bad> WRONG </bad></div>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


           ( . ) 

--> <h2>  All of these should be </h2>
==> <p>   This is an h2 </h2>
==> <h3>  h3 this is also an h2 </h2>
==> <a>   These tags need help </h2>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
